# Optional monitoring stack for Finance Tracker
# Usage: docker-compose -f docker-compose.yml -f docker-compose.monitoring.yml up -d

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: finance-tracker-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - finance-network

  grafana:
    image: grafana/grafana:latest
    container_name: finance-tracker-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_SERVER_ROOT_URL=http://localhost:3000
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - finance-network
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: finance-tracker-node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - finance-network

  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: finance-tracker-mysql-exporter
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=root:${DB_PASSWORD}@(db:3306)/
    networks:
      - finance-network
    depends_on:
      - db

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

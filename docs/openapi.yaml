openapi: 3.0.3
info:
  title: Фінансовий трекер API
  description: REST API для домашнього обліку доходів та витрат
  version: 1.0.0
  contact:
    name: API Support
    email: support@finance-tracker.local

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server
  - url: https://finance-tracker.local/api/v1
    description: Production server

tags:
  - name: Authentication
    description: Реєстрація та автентифікація користувачів
  - name: Categories
    description: Управління категоріями доходів та витрат
  - name: Transactions
    description: CRUD операції для транзакцій
  - name: Budgets
    description: Управління бюджетами
  - name: Statistics
    description: Звіти та статистика

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Іван Петренко"
        email:
          type: string
          format: email
          example: "ivan@example.com"
        created_at:
          type: string
          format: date-time
          example: "2025-10-06T10:30:00Z"

    Category:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Зарплата"
        type:
          type: string
          enum: [income, expense]
          example: "income"
        icon:
          type: string
          nullable: true
          example: "wallet"
        color:
          type: string
          nullable: true
          example: "#10B981"
        is_active:
          type: boolean
          example: true
        is_system:
          type: boolean
          example: false

    Transaction:
      type: object
      properties:
        id:
          type: integer
          example: 1
        amount:
          type: number
          format: decimal
          example: 5000.00
        description:
          type: string
          nullable: true
          example: "Зарплата жовтень"
        transaction_date:
          type: string
          format: date
          example: "2025-10-01"
        category:
          $ref: '#/components/schemas/Category'
        created_at:
          type: string
          format: date-time

    Budget:
      type: object
      properties:
        id:
          type: integer
        category:
          $ref: '#/components/schemas/Category'
        amount:
          type: number
          format: decimal
        period:
          type: string
          enum: [daily, weekly, monthly, yearly]
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        spent:
          type: number
          format: decimal
        remaining:
          type: number
          format: decimal
        percentage:
          type: number
          format: float
        alert_threshold:
          type: integer
          minimum: 0
          maximum: 100
        is_over_budget:
          type: boolean
        is_active:
          type: boolean

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Validation error"
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Реєстрація нового користувача
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - password_confirmation
              properties:
                name:
                  type: string
                  example: "Іван Петренко"
                email:
                  type: string
                  format: email
                  example: "ivan@example.com"
                password:
                  type: string
                  format: password
                  example: "SecurePass123!"
                password_confirmation:
                  type: string
                  format: password
                  example: "SecurePass123!"
      responses:
        '201':
          description: Користувача зареєстровано
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
                        example: "1|abcd1234..."
                  message:
                    type: string
                    example: "User registered successfully"
        '422':
          description: Помилка валідації
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Вхід користувача
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Успішний вхід
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
        '401':
          description: Невірні облікові дані

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Вихід користувача
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успішний вихід
        '401':
          description: Не автентифіковано

  /categories:
    get:
      tags:
        - Categories
      summary: Список категорій
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum: [income, expense]
        - name: is_active
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Список категорій
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'

    post:
      tags:
        - Categories
      summary: Створити категорію
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
              properties:
                name:
                  type: string
                type:
                  type: string
                  enum: [income, expense]
                icon:
                  type: string
                color:
                  type: string
      responses:
        '201':
          description: Категорію створено
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Category'
        '422':
          description: Помилка валідації

  /categories/{id}:
    put:
      tags:
        - Categories
      summary: Оновити категорію
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                icon:
                  type: string
                color:
                  type: string
      responses:
        '200':
          description: Категорію оновлено
        '404':
          description: Категорію не знайдено

    delete:
      tags:
        - Categories
      summary: Видалити категорію
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Категорію видалено
        '404':
          description: Категорію не знайдено

  /transactions:
    get:
      tags:
        - Transactions
      summary: Список транзакцій
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: from_date
          in: query
          schema:
            type: string
            format: date
        - name: to_date
          in: query
          schema:
            type: string
            format: date
        - name: category_id
          in: query
          schema:
            type: integer
        - name: type
          in: query
          schema:
            type: string
            enum: [income, expense]
      responses:
        '200':
          description: Список транзакцій
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Transaction'
                      pagination:
                        type: object
                        properties:
                          current_page:
                            type: integer
                          total_pages:
                            type: integer
                          per_page:
                            type: integer
                          total:
                            type: integer

    post:
      tags:
        - Transactions
      summary: Створити транзакцію
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - category_id
                - amount
                - transaction_date
              properties:
                category_id:
                  type: integer
                amount:
                  type: number
                  format: decimal
                description:
                  type: string
                transaction_date:
                  type: string
                  format: date
      responses:
        '201':
          description: Транзакцію створено
        '422':
          description: Помилка валідації

  /transactions/{id}:
    put:
      tags:
        - Transactions
      summary: Оновити транзакцію
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                amount:
                  type: number
                description:
                  type: string
                transaction_date:
                  type: string
                  format: date
      responses:
        '200':
          description: Транзакцію оновлено
        '404':
          description: Транзакцію не знайдено

    delete:
      tags:
        - Transactions
      summary: Видалити транзакцію
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Транзакцію видалено
        '404':
          description: Транзакцію не знайдено

  /stats/overview:
    get:
      tags:
        - Statistics
      summary: Загальна статистика
      security:
        - bearerAuth: []
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
            format: date
        - name: to_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Статистика
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      period:
                        type: object
                        properties:
                          from:
                            type: string
                            format: date
                          to:
                            type: string
                            format: date
                      total_income:
                        type: number
                      total_expense:
                        type: number
                      balance:
                        type: number
                      transactions_count:
                        type: integer

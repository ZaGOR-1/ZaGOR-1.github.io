<?php

require __DIR__ . '/../../vendor/autoload.php';

$app = require_once __DIR__ . '/../../bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

use App\Services\StatsService;

echo "üìä –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤ –¥–æ—Ö–æ–¥—ñ–≤/–≤–∏—Ç—Ä–∞—Ç\n";
echo str_repeat("=", 70) . "\n\n";

$statsService = app(StatsService::class);

// –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–ø—Ä–∏–ø—É—Å–∫–∞—î–º–æ 1)
$userId = 1;
$user = DB::table('users')->find($userId);

if (!$user) {
    echo "‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!\n";
    exit(1);
}

echo "üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {$user->name}\n";
echo "üí± –ë–∞–∑–æ–≤–∞ –≤–∞–ª—é—Ç–∞: {$user->default_currency}\n\n";

// –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
$transactions = DB::table('transactions')
    ->where('user_id', $userId)
    ->orderBy('transaction_date')
    ->get();

echo "üìã –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó:\n";
echo str_repeat("-", 70) . "\n";

$totalIncome = 0;
$totalExpense = 0;

foreach ($transactions as $transaction) {
    $category = DB::table('categories')->find($transaction->category_id);
    $type = $category->type;
    $typeIcon = $type === 'income' ? 'üìà' : 'üìâ';
    
    echo sprintf(
        "%s %s | %s %s | %s | %s\n",
        $typeIcon,
        date('Y-m-d H:i', strtotime($transaction->transaction_date)),
        number_format($transaction->amount, 2),
        $transaction->currency,
        $category->name,
        $transaction->description
    );
    
    // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ –±–∞–∑–æ–≤—É –≤–∞–ª—é—Ç—É
    $currencyService = app(\App\Services\CurrencyService::class);
    $convertedAmount = $currencyService->convert(
        $transaction->amount,
        $transaction->currency,
        $user->default_currency,
        new DateTime($transaction->transaction_date)
    );
    
    if ($type === 'income') {
        $totalIncome += $convertedAmount;
        echo sprintf("   ‚Üí –î–æ—Ö—ñ–¥: %.2f %s\n", $convertedAmount, $user->default_currency);
    } else {
        $totalExpense += $convertedAmount;
        echo sprintf("   ‚Üí –í–∏—Ç—Ä–∞—Ç–∞: %.2f %s\n", $convertedAmount, $user->default_currency);
    }
}

echo "\n" . str_repeat("=", 70) . "\n";
echo sprintf("üí∞ –ó–∞–≥–∞–ª—å–Ω–∏–π –¥–æ—Ö—ñ–¥:    %s\n", number_format($totalIncome, 2) . ' ' . $user->default_currency);
echo sprintf("üí∏ –ó–∞–≥–∞–ª—å–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏:   %s\n", number_format($totalExpense, 2) . ' ' . $user->default_currency);
echo sprintf("üìä –ë–∞–ª–∞–Ω—Å:             %s\n", number_format($totalIncome - $totalExpense, 2) . ' ' . $user->default_currency);

// –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –∑ API
echo "\n" . str_repeat("-", 70) . "\n";
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ—Ä–µ–∑ StatsService:\n\n";

$stats = $statsService->getOverview($userId, '2025-10-01', '2025-10-31');

echo sprintf("API –î–æ—Ö—ñ–¥:    %s\n", number_format($stats['total_income'], 2) . ' ' . $stats['currency']);
echo sprintf("API –í–∏—Ç—Ä–∞—Ç–∏:  %s\n", number_format($stats['total_expense'], 2) . ' ' . $stats['currency']);
echo sprintf("API –ë–∞–ª–∞–Ω—Å:   %s\n", number_format($stats['balance'], 2) . ' ' . $stats['currency']);

echo "\n";

if (abs($totalIncome - $stats['total_income']) < 0.01) {
    echo "‚úÖ –î–æ—Ö–æ–¥–∏ –∑–±—ñ–≥–∞—é—Ç—å—Å—è!\n";
} else {
    echo "‚ùå –î–æ—Ö–æ–¥–∏ –ù–ï –∑–±—ñ–≥–∞—é—Ç—å—Å—è! –†—ñ–∑–Ω–∏—Ü—è: " . ($totalIncome - $stats['total_income']) . "\n";
}

if (abs($totalExpense - $stats['total_expense']) < 0.01) {
    echo "‚úÖ –í–∏—Ç—Ä–∞—Ç–∏ –∑–±—ñ–≥–∞—é—Ç—å—Å—è!\n";
} else {
    echo "‚ùå –í–∏—Ç—Ä–∞—Ç–∏ –ù–ï –∑–±—ñ–≥–∞—é—Ç—å—Å—è! –†—ñ–∑–Ω–∏—Ü—è: " . ($totalExpense - $stats['total_expense']) . "\n";
}

echo "\n‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n";

